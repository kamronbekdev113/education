<?php

namespace common\models;

use backend\models\GroupStudent;

/**
 * This is the model class for table "student".
 *
 * @property int $id
 * @property string|null $firstName
 * @property string|null $lastName
 * @property string|null $phoneNumber
 * @property int|null $region_id
 *
 * @property GroupStudent[] $groupStudents
 * @property Region $region
 */
class Student extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'student';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['region_id'], 'integer'],
            [['firstName', 'lastName'], 'string', 'max' => 50],
            [['phoneNumber'], 'string', 'max' => 15],
            [['region_id'], 'exist', 'skipOnError' => true, 'targetClass' => Region::class, 'targetAttribute' => ['region_id' => 'id']],
        ];
    }
    public $fullName;

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub

        $this->fullName = $this->firstName  . ' ' . $this->lastName;
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'firstName' => 'First Name',
            'lastName' => 'Last Name',
            'phoneNumber' => 'Phone Number',
            'region_id' => 'Region ID',
        ];
    }

    /**
     * Gets query for [[GroupStudents]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getGroupStudents()
    {
        return $this->hasMany(GroupStudent::class, ['student_id' => 'id']);
    }

    /**
     * Gets query for [[Region]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getRegion()
    {
        return $this->hasOne(Region::class, ['id' => 'region_id']);
    }
}
